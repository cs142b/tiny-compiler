
running 1 test
digraph main { 
	CB [shape=record, label="<b>CB | {-1: const #1}"];

	bb0 [shape=record, label="<b>BB0 | {\<empty\>}"];
	bb1 [shape=record, label="<b>BB1 | {2: cmp (-1) (-1)|3: bne (2) (BB3)}"];
	bb2 [shape=record, label="<b>BB2 | {4: add (-1) (-1)|6: bra (BB4)}"];
	bb3 [shape=record, label="<b>BB3 | {\<empty\>}"];
	bb4 [shape=record, label="<b>BB4 | {5: phi (4) (0)}"];
	bb5 [shape=record, label="<b>BB5 | {8: End}"];

	CT:s -> bb0:n;
	bb0:s -> bb1:n [label="   conditional"];
	bb1:s -> bb2:n [label="   fall-through"];
	bb1:s -> bb3:n [label="   branch"];
	bb2:s -> bb4:n [label="   branch"];
	bb3:s -> bb4:n [label="   fall-through"];
	bb4:s -> bb5:n [label="   exit"];

	bb0:b -> bb1:b [color=blue, style=dotted];
	bb1:b -> bb2:b [color=blue, style=dotted];
	bb1:b -> bb3:b [color=blue, style=dotted];
	bb1:b -> bb4:b [color=blue, style=dotted];
	bb4:b -> bb5:b [color=blue, style=dotted];

}
NodeIndex(3)
def set: 
0
use set: 
in set: 
4
out set: 
4
0
NodeIndex(2)
def set: 
0
use set: 
-1
in set: 
4
-1
out set: 
0
4
NodeIndex(0)
def set: 
use set: 
in set: 
-1
4
out set: 
-1
4
NodeIndex(4)
def set: 
use set: 
4
0
in set: 
4
0
out set: 
NodeIndex(5)
def set: 
0
5
use set: 
in set: 
out set: 
NodeIndex(1)
def set: 
2
0
use set: 
-1
in set: 
-1
4
out set: 
4
-1
2
3
4
6
5
MAPPING OF REGISTERS
Line(4): R2
Line(2): R1
Line(5): R1
Line(-1): R1
Line(0): R2
ASSEMBLY INSTRUCTIONS
ADDI(1, 0, 1)
CMPI(1, 1, 1)
BNE(1, 100)
ADDI(2, 0, 1)
ADDI(2, 2, 1)
JSR(0)
RET(0)
test code_gen::tests::first ... ok

test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 18 filtered out; finished in 0.00s


running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

